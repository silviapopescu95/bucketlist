{"version":3,"sources":["services/auth.service.js","components/login.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/register.component.js","components/book.component.js","components/profile.component.js","components/bucketlist.component.js","images/bucketlist.png","components/board-user.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","authHeader","user","get","headers","Home","content","UserService","getPublicContent","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","BookList","useState","books","setBooks","editing","setEditing","useEffect","getBooks","onSubmitBook","a","title","author","description","res","onSubmitEdits","id","deleteBook","bookToDelete","method","url","map","book","_id","onClick","defaultValue","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","roles","index","BucketLists","bucketlist","setBucketList","getBucketList","onSubmitBucketList","deleteBucketList","bucketlistToDelete","BoardUser","getUserBoard","bucketImage","width","height","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fc9f594.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5000/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n  \n    if (user && user.accessToken) {\n      // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n      return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n    } else {\n      return {};\n    }\n  }","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:5000/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const BookList = () => {\n    const [books, setBooks] = useState([]);\n    const [editing, setEditing] = useState(null);\n\n    useEffect(() => {\n        getBooks();\n    }, []);\n\n    // Create\n    const onSubmitBook = async e => {\n        e.preventDefault()\n        const { title, author, description } = e.target\n        await axios.post('/api/books', {\n            title: title.value,\n            author: author.value,\n            description: description.value,\n        })\n        title.value = ''\n        author.value = ''\n        description.value = ''\n        getBooks()\n    }\n\n    // Read\n    const getBooks = async () => {\n        const res = await axios.get('/api/books')\n        const data = res.data\n        setBooks(data)\n    }\n\n    // Update\n    const onSubmitEdits = async (e, id) => {\n        e.preventDefault()\n        const { title, author, description } = e.target\n        await axios.post(`/api/books/update/${id}`, {\n            title: title.value,\n            author: author.value,\n            description: description.value,\n        })\n        setEditing(null)\n        getBooks()\n    }\n\n    // Delete\n    const deleteBook = async bookToDelete => {\n        await axios({\n            method: 'DELETE',\n            url: '/api/books/',\n            data: {\n                id: bookToDelete,\n            },\n        })\n        await getBooks()\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"DataInput\">\n                <h2>Enter book:</h2>\n                <form onSubmit={e => onSubmitBook(e)}>\n                    <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" name=\"title\" />\n                    <label htmlFor=\"author\">Author:</label>\n                    <input type=\"text\" name=\"author\" />\n                    <label htmlFor=\"description\">Description:</label>\n                    <input type=\"text\" name=\"description\" />\n                    <button>Add Book</button>\n                </form>\n            </div>\n            <div className=\"DataOutput\">\n                {books.map(book => (\n                    <div key={book._id}>\n                        {editing !== book._id ? (\n                            <div key={book._id} className=\"DataOutput__card\">\n                                <div className=\"DataOutput__card--details\">\n                                    <div>\n                                        <span>Title:</span>\n                                        {book.title}\n                                    </div>\n                                    <div>\n                                        <span>Author:</span>\n                                        {book.author}\n                                    </div>\n                                    <div>\n                                        <span>Description:</span>\n                                        {book.description}\n                                    </div>\n                                </div>\n                                <div className=\"DataOutput__card--options\">\n                                    <button onClick={() => setEditing(book._id)}>Edit</button>\n                                    <button onClick={() => deleteBook(book._id)}>Delete</button>\n                                </div>\n                            </div>\n                        ) : (\n                                <div key={book._id} className=\"DataOutput__editing\">\n                                    <form onSubmit={e => onSubmitEdits(e, book._id)}>\n                                        <div className=\"DataOutput__editing--option\">\n                                            <label htmlFor=\"title\">Title:</label>\n                                            <input type=\"text\" name=\"title\" defaultValue={book.title} />\n                                        </div>\n                                        <div className=\"DataOutput__editing--option\">\n                                            <label htmlFor=\"author\">Author:</label>\n                                            <input type=\"text\" name=\"author\" defaultValue={book.author} />\n                                        </div>\n                                        <div className=\"DataOutput__editing--option\">\n                                            <label htmlFor=\"description\">Description:</label>\n                                            <input type=\"text\" name=\"description\" defaultValue={book.description} />\n                                        </div>\n                                        <div>\n                                            <button type=\"Submit\">Submit</button>\n                                            <button\n                                                className=\"DataOutput__editing--cancel\"\n                                                onClick={() => setEditing(null)}\n                                            >\n                                                Cancel\n              </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default BookList;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const BucketLists = () => {\n    const [bucketlist, setBucketList] = useState([]);\n    const [editing, setEditing] = useState(null);\n\n    useEffect(() => {\n        getBucketList();\n    }, []);\n\n    // Create\n    const onSubmitBucketList = async e => {\n        e.preventDefault()\n        const { title, description } = e.target\n        await axios.post('/api/bucketlist', {\n            title: title.value,\n            description: description.value,\n        })\n        title.value = ''\n        description.value = ''\n        getBucketList()\n    }\n\n    // Read\n    const getBucketList = async () => {\n        const res = await axios.get('/api/bucketlist')\n        const data = res.data\n        setBucketList(data)\n    }\n\n    // Update\n    const onSubmitEdits = async (e, id) => {\n        e.preventDefault()\n        const { title, description } = e.target\n        await axios.post(`/api/bucketlist/update/${id}`, {\n            title: title.value,\n            description: description.value,\n        })\n        setEditing(null)\n        getBucketList()\n    }\n\n    // Delete\n    const deleteBucketList = async bucketlistToDelete => {\n        await axios({\n            method: 'DELETE',\n            url: '/api/bucketlist/',\n            data: {\n                id: bucketlistToDelete,\n            },\n        })\n        await getBucketList()\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"DataInput\">\n                <h2>Enter Bucket List Item:</h2>\n                <form onSubmit={e => onSubmitBucketList(e)}>\n                    <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" name=\"title\" />\n                \n                    <label htmlFor=\"description\">Description:</label>\n                    <input type=\"text\" name=\"description\" />\n                    <button>Add Bucket List Item</button>\n                </form>\n            </div>\n            <div className=\"DataOutput\">\n                {bucketlist.map(bucketlist => (\n                    <div key={bucketlist._id}>\n                        {editing !== bucketlist._id ? (\n                            <div key={bucketlist._id} className=\"DataOutput__card\">\n                                <div className=\"DataOutput__card--details\">\n                                    <div>\n                                        <span>Title:</span>\n                                        {bucketlist.title}\n                                    </div>\n                            \n                                    <div>\n                                        <span>Description:</span>\n                                        {bucketlist.description}\n                                    </div>\n                                </div>\n                                <div className=\"DataOutput__card--options\">\n                                    <button onClick={() => setEditing(bucketlist._id)}>Edit</button>\n                                    <button onClick={() => deleteBucketList(bucketlist._id)}>Delete</button>\n                                </div>\n                            </div>\n                        ) : (\n                                <div key={bucketlist._id} className=\"DataOutput__editing\">\n                                    <form onSubmit={e => onSubmitEdits(e, bucketlist._id)}>\n                                        <div className=\"DataOutput__editing--option\">\n                                            <label htmlFor=\"title\">Title:</label>\n                                            <input type=\"text\" name=\"title\" defaultValue={bucketlist.title} />\n                                        </div>\n                                     \n                                        <div className=\"DataOutput__editing--option\">\n                                            <label htmlFor=\"description\">Description:</label>\n                                            <input type=\"text\" name=\"description\" defaultValue={bucketlist.description} />\n                                        </div>\n                                        <div>\n                                            <button type=\"Submit\">Submit</button>\n                                            <button\n                                                className=\"DataOutput__editing--cancel\"\n                                                onClick={() => setEditing(null)}\n                                            >\n                                                Cancel\n              </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default BucketLists;","export default __webpack_public_path__ + \"static/media/bucketlist.26cdac94.png\";","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nimport BucketLists from \"./bucketlist.component\";\n\nimport bucketImage from \"../images/bucketlist.png\"\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron text-center\">\n          <h3 className=\"text-center\">2021 Bucket List</h3>\n          <img src={bucketImage} width=\"20%\" height=\"20%\" className=\"text-right\"/>\n        </header>\n        <div><BucketLists></BucketLists></div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Home from \"./components/home.component\";\nimport Register from \"./components/register.component\";\nimport BookList from \"./components/book.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n           2021 Bucket List\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            {/* <li className=\"nav-item\">\n              <Link to={\"/book\"} className=\"nav-link\">\n                Book\n              </Link>\n            </li> */}\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/book\" component={BookList} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}